import { NextRequest, NextResponse } from 'next/server';
import { GoogleGenAI } from "@google/genai";

/**
 * Google Gemini AI API Route
 * Generates professional descriptions using Gemini 2.5 Flash model
 */

const GOOGLE_AI_KEY = process.env.NEXT_GOOGLE_AI_STUDIO_KEY;

// Initialize Google GenAI client
const ai = new GoogleGenAI({
  apiKey: GOOGLE_AI_KEY,
});

interface GenerateRequest {
  prompt: string;
  context?: string;
  type?: 'summary' | 'experience' | 'project' | 'general';
}

/**
 * Get system prompt based on description type
 */
function getSystemPrompt(type: string): string {
  const prompts = {
    summary: `You are a professional resume writer specializing in crafting compelling professional summaries. 
Create a concise, impactful professional summary (2-3 sentences) that highlights the candidate's expertise, 
experience, and career goals. Use action-oriented language and quantify achievements when possible.`,
    
    experience: `You are a professional resume writer specializing in job descriptions. 
Create a compelling job description that highlights responsibilities, achievements, and impact. 
Use bullet points, action verbs, and quantify results when possible. Focus on accomplishments rather than duties.`,
    
    project: `You are a professional resume writer specializing in project descriptions. 
Create a concise, impactful project description that highlights the problem solved, technologies used, 
and measurable outcomes. Focus on your role and the project's impact.`,
    
    general: `You are a professional resume writer. Create clear, concise, and impactful professional content 
that showcases skills, achievements, and value. Use professional language and focus on results.`,
  };

  return prompts[type as keyof typeof prompts] || prompts.general;
}

/**
 * POST /api/generate-description-gemini
 * Generates descriptions using Google Gemini 2.5 Flash
 */
export async function POST(request: NextRequest) {
  try {
    // Check API key
    if (!GOOGLE_AI_KEY) {
      return NextResponse.json(
        { error: 'Google AI Studio API key not configured' },
        { status: 500 }
      );
    }

    // Parse request body
    const body: GenerateRequest = await request.json();
    const { prompt, context, type = 'general' } = body;

    if (!prompt || prompt.trim().length === 0) {
      return NextResponse.json(
        { error: 'Prompt is required' },
        { status: 400 }
      );
    }

    // Build system and user prompts
    const systemPrompt = getSystemPrompt(type);
    const userPrompt = context
      ? `Context: ${context}\n\nUser Input: ${prompt}\n\nGenerate a professional description based on the above information.`
      : `User Input: ${prompt}\n\nGenerate a professional description based on the above information.`;

    // Combine system and user prompts for Gemini
    const fullPrompt = `${systemPrompt}\n\n${userPrompt}`;

    // Call Google Gemini API using SDK
    const response = await ai.models.generateContent({
      model: "gemini-2.0-flash-exp",
      contents: fullPrompt,
    });

    // Extract generated text
    const description = response.text;

    if (!description) {
      throw new Error('No content generated by Gemini');
    }

    // Return result
    return NextResponse.json({
      success: true,
      description: description.trim(),
      model: 'Gemini 2.0 Flash',
    });
  } catch (error) {
    console.error('Generate description error (Gemini):', error);
    return NextResponse.json(
      { error: error instanceof Error ? error.message : 'Failed to generate description' },
      { status: 500 }
    );
  }
}
